export declare const emojiTrue = "\u2705";
export declare const emojiFalse = "\uD83D\uDEAB";
declare type ConstOrPromise<T> = T | Promise<T>;
declare type Func<Arguments extends any[], ReturnType> = (...args: Arguments) => ConstOrPromise<ReturnType>;
declare type ConstOrFunc<Arguments extends any[], ReturnType> = ReturnType | Func<Arguments, ReturnType>;
export interface PrefixOptions {
    prefixTrue?: string;
    prefixFalse?: string;
    hideTrueEmoji?: boolean;
    hideFalseEmoji?: boolean;
}
export declare function prefixEmoji<Arguments extends any[]>(text: ConstOrFunc<Arguments, string>, prefix: ConstOrFunc<Arguments, string | boolean | undefined>, options?: PrefixOptions, ...args: Arguments): Promise<string>;
export declare function prefixText<Arguments extends any[]>(text: ConstOrFunc<Arguments, string>, prefix: ConstOrFunc<Arguments, string | undefined>, ...args: Arguments): Promise<string>;
export {};
